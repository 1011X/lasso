name: CI

on: [pull_request, push]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-hack

      - uses: actions-rs/cargo@v1
        with:
          command: hack
          args: check --each-feature --no-dev-deps
      - uses: actions-rs/cargo@v1
        with:
          command: hack
          args: check --feature-powerset --no-dev-deps

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  doc:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all --document-private-items --no-deps

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all -- -D warnings

  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - name: x86_64-pc-windows-msvc
            os: windows-latest
            target: x86_64-pc-windows-msvc
          - name: i686-pc-windows-msvc
            os: windows-latest
            target: i686-pc-windows-msvc

          # Linux
          - name: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: i686-unknown-linux-gnu
            os: ubuntu-latest
            target: i686-unknown-linux-gnu

          # OSX
          - name: x86_64-apple-darwin
            os: macos-latest
            target: x86_64-apple-darwin

    env:
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0

    steps:
      - uses: actions/checkout@v2
      - shell: bash
        if: matrix.target == 'i686-unknown-linux-gnu'
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib libc6-dev-i386
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-hack cargo-sweep
      - name: Set rustc version
        run: echo "::set-env name=CURRENT_RUSTC_VERSION::$(rustc -V)"

      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
      - name: Cache Cargo Bin
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ matrix.os }}-cargo-bin-${{ hashFiles('**/Cargo.toml') }}
      - name: Cache Cargo Git
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.os }}-cargo-git-${{ hashFiles('**/Cargo.toml') }}
      - name: Cache Cargo Build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.os }}-cargo-build-target-${{ env.CURRENT_RUSTC_VERSION }}-${{ hashFiles('**/Cargo.toml') }}
      - name: Register Artifacts
        uses: actions-rs/cargo@v1
        with:
          command: sweep
          args: -s

      - name: Test each feature
        if: ${{ !matrix.custom-features }}
        uses: actions-rs/cargo@v1
        with:
          command: hack
          args: test --target ${{ matrix.target }} --workspace --each-feature

      - name: Test all powersets
        if: ${{ !matrix.custom-features }}
        uses: actions-rs/cargo@v1
        with:
          command: hack
          args: test --target ${{ matrix.target }} --workspace --feature-powerset

      - name: Miri
        uses: actions-rs/cargo@v1
        with:
          command: hack
          args: miri test --target ${{ matrix.target }} --features multi-threaded --verbose

      - name: Clean unused artifacts
        uses: actions-rs/cargo@v1
        with:
          command: sweep
          args: -f
